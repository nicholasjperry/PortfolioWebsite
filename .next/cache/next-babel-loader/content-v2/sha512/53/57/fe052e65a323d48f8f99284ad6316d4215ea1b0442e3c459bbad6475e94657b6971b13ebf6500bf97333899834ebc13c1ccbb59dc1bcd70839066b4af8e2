{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Flex } from 'reflexbox';\nimport getConfig from 'next/config';\nimport fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\n\nfunction Project({\n  project\n}) {\n  console.log(project);\n  const SEO = {\n    title: `Portfolio Website | ${project.title}`,\n    description: project.description,\n    openGraph: {\n      title: `Portfolio Website | ${project.title}`,\n      description: project.title\n    }\n  };\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(NextSeo, _objectSpread({}, SEO)), /*#__PURE__*/_jsxs(Box, {\n      variant: \"container\",\n      children: [/*#__PURE__*/_jsx(Box, {\n        as: \"h2\",\n        my: 40,\n        children: project.title\n      }), /*#__PURE__*/_jsx(Box, {\n        maxWidth: 600,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: project.description\n          }\n        })\n      })]\n    })]\n  });\n}\n\nconst {\n  publicRuntimeConfig\n} = getConfig();\nexport async function getServerSideProps(context) {\n  const {\n    slug\n  } = context.query;\n  const res = await fetch(`${publicRuntimeConfig.API_URL}/projects?slug=${slug}`);\n  const data = await res.json();\n  console.log(slug);\n  return {\n    props: {\n      project: data[0]\n    }\n  };\n}\nexport default Project;","map":null,"metadata":{},"sourceType":"module"}